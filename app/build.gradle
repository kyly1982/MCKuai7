apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'
    defaultConfig {
        applicationId "com.mckuai.imc"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 42
        versionName "7.0.10"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
        }
    }
    //针对不同的渠道打包
    productFlavors {
        mckuai_mckuai {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mckuai_mckuai_V7", APP_NAME: "麦块我的世界盒子"]
        }
        mckuai_xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mckuai_xiaomi_V7", APP_NAME: "麦块我的世界盒子"]
        }
        mckuai_360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mckuai_360_V7", APP_NAME: "麦块"]
        }
        mckuai_wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mckuai_wandoujia_V7", APP_NAME: "麦块我的世界盒子"]
        }
        mckuai_baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mckuai_baidu_V7", APP_NAME: "麦块"]
        }
        mckuai_tencent {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mckuai_tencent_V7", APP_NAME: "麦块"]
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.each {
            output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = "${variant.productFlavors[0].name}-${defaultConfig.versionName}.apk"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':IMKit')
    compile project(':PushSDK')
    compile files('libs/umeng_social_sdk.jar')
    compile files('libs/SocialSDK_QQZone_3.jar')
    compile files('libs/SocialSDK_WeiXin_2.jar')
    compile files('libs/mta-sdk-1.6.2.jar')
    compile files('libs/open_sdk_r5509.jar')
    compile files('libs/SocialSDK_WeiXin_1.jar')
    compile files('libs/BaiduLBS_Android.jar')
    compile 'com.squareup.okhttp3:okhttp:+'
    compile 'com.android.support:support-v4:23.2.1'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:design:23.2.1'
    compile 'com.android.support:cardview-v7:23.2.1'
    compile 'com.google.code.gson:gson:+'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.nostra13.universalimageloader:universal-image-loader:+'
    compile 'com.malinskiy:superrecyclerview:+'
    compile 'de.greenrobot:greendao:2.1.0'
    compile 'com.loopj.android:android-async-http:+'
    //compile 'com.marshalchen.ultimaterecyclerview:library:0.4.0'
    compile 'com.hkm.slidingmenulib:libmenu:0.4.8'
    compile 'com.zhy:okhttputils:2.3.8'
    compile 'cn.finalteam:okhttpfinal:+'
    compile files('libs/android-viewbadger.jar')
}
